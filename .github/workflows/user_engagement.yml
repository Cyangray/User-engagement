# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: User engagement

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build:

    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres
#
#        env:
#          POSTGRES_HOST: localhost
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_USER: postgres
#          POSTGRES_DB: postgres
#
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          - 5432:5432

    steps:
    - name: Set up ruff
      uses: actions/setup-python@v3
      with:
        python-version: "^3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff
    - uses: actions/checkout@v4
    - name: Lint and format with ruff
      run: |
        ruff check
        ruff format

    - name: Run docker-compose
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./compose.yaml"
      env:
        TEST_POSTGRES_USER: "test"
        TEST_POSTGRES_PASSWORD: "test"
        TEST_POSTGRES_DB: "test"
        TEST_POSTGRES_PORT: "5432"
        TEST_POSTGRES_HOST: "postgres_test"
#
#
#
#
#
#    - name: Set up Python 3.12
#      uses: actions/setup-python@v3
#      with:
#        python-version: "^3.12"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install ruff pytest poetry
#        poetry install
#    - name: Lint and format with ruff
#      run: |
#        ruff check
#        ruff format
#    - name: Test with pytest
#      env:
#        POSTGRES_HOST: localhost
#        POSTGRES_PASSWORD: postgres
#        POSTGRES_USER: postgres
#        POSTGRES_DB: postgres
#      run: |
#        poetry run pytest
